"use strict";(self.webpackChunkcopper_docusaurus=self.webpackChunkcopper_docusaurus||[]).push([[1309],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return f}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),s=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},l=function(e){var n=s(e.components);return r.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),d=s(t),f=a,m=d["".concat(p,".").concat(f)]||d[f]||u[f]||i;return t?r.createElement(m,c(c({ref:n},l),{},{components:t})):r.createElement(m,c({ref:n},l))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,c=new Array(i);c[0]=d;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o.mdxType="string"==typeof e?e:a,c[1]=o;for(var s=2;s<i;s++)c[s]=t[s];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},3345:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return l},default:function(){return d}});var r=t(7462),a=t(3366),i=(t(7294),t(3905)),c=["components"],o={},p="Access",s={unversionedId:"product/access",id:"product/access",isDocsHomePage:!1,title:"Access",description:"Specifications",source:"@site/docs/product/access.md",sourceDirName:"product",slug:"/product/access",permalink:"/docs/product/access",editUrl:"https://github.com/Coppernic/coppernic.github.io/docs/product/access.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Access RFD40",permalink:"/docs/product/access-rfd40"},next:{title:"C-five",permalink:"/docs/product/cfive"}},l=[{value:"Specifications",id:"specifications",children:[]},{value:"Barcode Scanning",id:"barcode-scanning",children:[]},{value:"Key mapping",id:"key-mapping",children:[]},{value:"Optional &#39;Pistol Grip&#39;",id:"optional-pistol-grip",children:[]}],u={toc:l};function d(e){var n=e.components,o=(0,a.Z)(e,c);return(0,i.kt)("wrapper",(0,r.Z)({},u,o,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"access"},"Access"),(0,i.kt)("p",null,(0,i.kt)("img",{src:t(5905).Z})),(0,i.kt)("h2",{id:"specifications"},"Specifications"),(0,i.kt)("p",null,"Full specifications for Access can be downloaded ",(0,i.kt)("a",{parentName:"p",href:"https://www.coppernic.fr/en/documentations/"},"here"),"."),(0,i.kt)("h2",{id:"barcode-scanning"},"Barcode Scanning"),(0,i.kt)("p",null,"Access is equiped with a 2D barcode scanner. It can read both 1D and 2D symbologies:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/sdk/barcode/manager"},"Barcode"))),(0,i.kt)("h2",{id:"key-mapping"},"Key mapping"),(0,i.kt)("p",null,"Access has 2 programmable buttons that can be managed using API. It is possible to remap a virtual key or an application on each of them:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/sdk/core/mapping"},"Documentation"))),(0,i.kt)("h2",{id:"optional-pistol-grip"},"Optional 'Pistol Grip'"),(0,i.kt)("p",null,(0,i.kt)("img",{src:t(9097).Z})),(0,i.kt)("p",null,"The Pistol Grip is generating a key event when trigger is pressed and can be accessed from any application using standard Android Key Event management ",(0,i.kt)("a",{parentName:"p",href:"https://developer.android.com/reference/android/view/KeyEvent.Callback"},"here"),"."),(0,i.kt)("p",null,"The event trigger code is defined in Coppernic SDK"),(0,i.kt)("p",null,"You can add Coppernic's dependencies in your build:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-groovy"},"dependencies {\n    implementation 'fr.coppernic.sdk.core:CpcCore:2.2.4'\n")),(0,i.kt)("p",null,"And the code in activity will be :"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"    @Override\n    public boolean onKeyDown(int keyCode, KeyEvent keyEvent) {\n        if (keyCode == OsHelper.getTriggerKey()) {\n           // do action\n           return false;\n        }\n        return super.onKeyDown(keyCode, keyEvent);\n    }\n")),(0,i.kt)("p",null,'\u26a0\ufe0f Avoid using "Scan display" option in BarcodeManager, as event will be raised as key down when icon is displayed.\n\u26a0\ufe0f Like with a keyboard key event, several key down event will be generated if the finger remains pressed on the pistol trigger without releasing.'),(0,i.kt)("p",null,"A sample which demonstrates the use of a Pistol trigger to activate the barcode scan is available ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Coppernic/ScanSample"},"here")))}d.isMDXComponent=!0},9097:function(e,n,t){n.Z=t.p+"assets/images/access-pistol-grip-ea976b95e9a918ffad167b0ecdd40f2a.png"},5905:function(e,n,t){n.Z=t.p+"assets/images/access-62b48cf8efa11b192f958cd0b8f0f0cc.png"}}]);