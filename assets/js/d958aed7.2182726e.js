"use strict";(self.webpackChunkcopper_docusaurus=self.webpackChunkcopper_docusaurus||[]).push([[5704],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return m}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var d=n.createContext({}),s=function(e){var t=n.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(d.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},l=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,d=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),l=s(r),m=o,f=l["".concat(d,".").concat(m)]||l[m]||u[m]||a;return r?n.createElement(f,c(c({ref:t},p),{},{components:r})):n.createElement(f,c({ref:t},p))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,c=new Array(a);c[0]=l;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i.mdxType="string"==typeof e?e:o,c[1]=i;for(var s=2;s<a;s++)c[s]=r[s];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}l.displayName="MDXCreateElement"},9556:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return i},contentTitle:function(){return d},metadata:function(){return s},toc:function(){return p},default:function(){return l}});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),c=["components"],i={},d="HID",s={unversionedId:"product/access-er/hid",id:"product/access-er/hid",isDocsHomePage:!1,title:"HID",description:"AccessER HID embeds an HID RFID reader.",source:"@site/docs/product/access-er/hid.md",sourceDirName:"product/access-er",slug:"/product/access-er/hid",permalink:"/docs/product/access-er/hid",editUrl:"https://github.com/Coppernic/coppernic.github.io/docs/product/access-er/hid.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Access-ER & Access-ER e-ID",permalink:"/docs/product/access-er/accessER"},next:{title:"C-One\xb2 e-ID",permalink:"/docs/product/cone-eid/cone-eid"}},p=[],u={toc:p};function l(e){var t=e.components,i=(0,o.Z)(e,c);return(0,a.kt)("wrapper",(0,n.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"hid"},"HID"),(0,a.kt)("p",null,"AccessER HID embeds an HID RFID reader.\nThis reader is an OmniKey 5127CK."),(0,a.kt)("p",null,"Two modes are available :"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Wedge mode : Reader is emulating a keyboard, reading a card is generating a new keyboard event"),(0,a.kt)("li",{parentName:"ul"},"CCID mode : allows the use of standard PCSC library to communicate with the cards.")),(0,a.kt)("h4",{id:"wedge-mode"},"Wedge mode"),(0,a.kt)("p",null,"In Wedge mode, the reader will act as keyboard device while reading a card.\nWedge mode can be configured, according to your needs. Contact Coppernic support for more details."),(0,a.kt)("h4",{id:"ccid-mode"},"CCID mode"),(0,a.kt)("p",null,"In CCID mode, communication are done using a PC/SC library. Coppernic publishes a compatible library, CpcPcsc."),(0,a.kt)("p",null,"For reader management, documentation and sample code can be found ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Coppernic/PcscSample"},"here"),"."),(0,a.kt)("p",null,'After connecting to an HID Card, PcscSample can be used to send a command "Get PACS data" :\nFF70076B07A005A10380010400'),(0,a.kt)("p",null,"For advanced usage of the 5127CK, you may need to contact HID to have access on protected documentation. Contact Coppernic support for more details."),(0,a.kt)("h4",{id:"switch-mode"},"Switch mode"),(0,a.kt)("p",null,'The applications "5127CKMINI Config Tools" is available on ',(0,a.kt)("a",{parentName:"p",href:"docs/start/copperapps"},"CopperApps"),"\nThis application allows user to switch mode between CCID mode and Wedge Mode.\nWedge mode is configured to allowing reading all type of cards except Felica."),(0,a.kt)("p",null,(0,a.kt)("img",{src:r(4104).Z}),"\n",(0,a.kt)("img",{src:r(4052).Z})))}l.isMDXComponent=!0},4104:function(e,t,r){t.Z=r.p+"assets/images/hid_ccid-0a0aac7bd11d0ab061d5ea51162a2b9a.png"},4052:function(e,t,r){t.Z=r.p+"assets/images/hid_wedge-0dfbfb0607cbbd71867233f17c092803.png"}}]);